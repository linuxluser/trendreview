<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Trend Review {{ for_date }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">

<script>
    function submit_direction_for_symbol(symbol, direction) {
        const http = new XMLHttpRequest();
        const url = "/studies/{{ for_date }}/" + symbol + "/direction";
        const params = "direction=" + direction;
        http.open("POST", url, true);

        //Send the proper header information along with the request
        http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        http.setRequestHeader("Content-length", params.length);

        http.onreadystatechange = function() {
            if (http.readyState == 4 && http.status == 200) {
                console.log("Got server response: " + http.responseText);
            }
        }
        http.send(params);
    }

    // Force scroll to the top before the page refreshes
    window.onbeforeunload = function () {
        window.scrollTo(0, 0);
    }

    // Disable scrolling after refresh (https://developer.chrome.com/blog/history-api-scroll-restoration/)
    if ('scrollRestoration' in history) {
        history.scrollRestoration = 'manual';
    }
</script>

</head>

<body>

{# Count how many symbols TOTAL are left #}
{% set all_symbols = [] %}
{% set incomplete_symbols = [] %}
{% for basket,symbol_data in baskets|dictsort %}
    {% for symbol,data in symbol_data.items() %}
        {% set _ = all_symbols.append(symbol) %}
        {% if data.Direction is undefined or not data.Direction %}
            {% set _ = incomplete_symbols.append(symbol) %}
	{% endif %}
    {% endfor %}
{% endfor %}

<!-- Whether to show only incomplete symbols or not -->
<div class="container my-5 mx-2">
    <div class="form-check">
        {% if incomplete_only %}
        <input type="checkbox" class="form-check-input" id="incomplete-only" onchange="window.location = window.location.origin + window.location.pathname;" checked>
        {% else %}
        <input type="checkbox" class="form-check-input" id="incomplete-only" onchange="window.location = window.location.origin + window.location.pathname + '?incomplete_only=1';">
        {% endif %}
        <label class="form-check-label" for="incomplete-only">Show only incomplete symbols.</label>
    </div>
    {% if incomplete_only %}
    <p class="text-primary"><b>{{ incomplete_symbols|length }}</b> symbols remaining out of {{ all_symbols|length }} total ({{ '%2.0f'|format(100 - (((incomplete_symbols|length)/(all_symbols|length))*100)) }}% complete).</p>
    {% endif %}
</div>


{# Iterate over BASKETS #}
{% for basket,symbol_data in baskets|dictsort %}

    {# Determine if this basket is complete (the hard way because Jinja2 is ... Jinja2 ...) #}
    {% set completed = [] %}
    {% for symbol,data in symbol_data.items() if data.Direction is defined and data.Direction %}
        {% set _ = completed.append(symbol) %}
    {% endfor %}
    {% set basket_complete = completed|length == symbol_data|length %}

{% if not incomplete_only or (incomplete_only and not basket_complete) %}
<h2 class="bg-primary border border-primary text-white mx-auto px-5 py-2">{{ basket }}</h2>
    <div class="container">
        {% for symbol,data in symbol_data|dictsort if not (incomplete_only and data.Direction) %}
        <div class="row">
            <div class="col py-2">
                <a href="https://finviz.com/quote.ashx?t={{ symbol }}&ty=c&ta=1&p=d&r=m6" target="_blank" style="target-new:tab;">
                    <img src="{{ data.Chart.URL }}" class="img-fluid rounded mx-auto d-block" />
                </a>
            </div>
            <div class="col-3 py-2">
                <div class="container">
		    <div class="row align-items-center">
                        <div class="col"><h1><span class="badge bg-success">{{ symbol }}</span></h1></div>
                        <div class="col"><h5><span class="badge bg-primary">{{ data.Basket }}</span></h5></div>
                    </div>
		    <div class="row">
                        <div class="col"><p><em>{{ data.Title|default('[unknown title]') }}</em></p></div>
                    </div>
		</div>
                <table class="table table-warning">
                    <thead><tr>
                        <th scope="col">Direction</th>
                        <th scope="col">RSI(14)</th>
                        <th scope="col">IV%</th>
                    </tr></thead>
                    <tbody><tr>
                        <td>{{ data.Direction | default("none") }}</td>
                        <td>{{ data.RSI }}</td>
                        <td>{{ data['IV%'] }}</td>
                    </tr></tbody>
                </table>
                <div class="btn-group" role="group"><form>
                    <input class="btn-check" type="radio" name="direction" id="bullish-{{ symbol }}" autocomplete="off" onchange="submit_direction_for_symbol('{{ symbol }}', 'bullish');" {% if data.Direction == 'bullish' %}checked{% endif %}>
                    <label class="btn btn-outline-info" for="bullish-{{ symbol }}">Bullish</label>
                    <input class="btn-check" type="radio" name="direction" id="bearish-{{ symbol }}" autocomplete="off" onchange="submit_direction_for_symbol('{{ symbol }}', 'bearish');" {% if data.Direction == 'bearish' %}checked{% endif %}>
                    <label class="btn btn-outline-info" for="bearish-{{ symbol }}">Bearish</label>
                    <input class="btn-check" type="radio" name="direction" id="neutral-{{ symbol }}" autocomplete="off" onchange="submit_direction_for_symbol('{{ symbol }}', 'neutral');" {% if data.Direction == 'neutral' %}checked{% endif %}>
                    <label class="btn btn-outline-info" for="neutral-{{ symbol }}">Neutral</label>
                </form></div>
		{% set prev_dir = (previous_baskets[basket][symbol]|default({'Direction': None})).Direction %}
		{% if prev_dir is not none %}
                <h6 class="my-4">(Previous:
		    <span class="badge {% if prev_dir == "bullish" %}bg-info{% else %}bg-light text-info{% endif %}">Bullish</span>
		    <span class="badge {% if prev_dir == "bearish" %}bg-info{% else %}bg-light text-info{% endif %}">Bearish</span>
		    <span class="badge {% if prev_dir == "neutral" %}bg-info{% else %}bg-light text-info{% endif %}">Neutral</span>
		)</h6>
		{% endif %}
            </div>
        </div>
        {% endfor %}
    </div>
{% else %}
<p class="text-muted mx-auto px-5"><strike><b>{{ basket }}</b> basket is complete.</strike></p>
{% endif %}
{% endfor %}



<script>
</script>

</body>

</html>
